{% if keepalive__global_defs is defined and keepalive__global_defs is mapping %}
global_defs {
{%   for key, val in keepalive__global_defs.items() %}
{%     if key == 'notification_email' %}
{%       if val is string %}
  {{ key }} {
    {{ val }}
  }
{%       elif val is iterable %}
  {{ key }} {
    {{ val|join('\n    ') }}
  }
{%       endif %}
{%     else %}
  {{ key }} {{ val }}
{%     endif %}
{%   endfor %}
}
{% endif %}

# Script used to check if service under HA is running
{% if keepalive__services is defined and keepalive__services is iterable %}
{%   for service in keepalive__services %}
vrrp_script check_{{ service.name }} {
{%     if service.script is defined %}
  script "{{ service.script }}"
{%     else %}
  script "/usr/bin/killall -0 {{ service.name }}"
{%     endif %}
{%     if service.weight is defined %}
  weight {{ service.weight }}
{%     endif %}
{%     if service.interval is defined %}
  interval {{ service.interval }}
{%     endif %}
{%     if service.fall is defined %}
  fall {{ service.fall }}
{%     endif %}
{%     if service.rise is defined %}
  rise {{ service.rise }}
{%     endif %}
}
{%   endfor %}
{% endif %}

# Virtual interface
# The priority specifies the order in which the assigned interface to take over in a failover
vrrp_instance {{ keepalive__instance }} {
  state {{ keepalive__instance_state }}
  advert_int {{ keepalive__advert_interval }}
  interface {{ keepalive__interface }}
  virtual_router_id {{ keepalive__virtual_router_id }}
  priority {{ keepalive__instance_priority}}
  authentication {
    auth_type PASS
    auth_pass {{ keepalive__authentication_password }}
  }

  # The virtual ip address shared between the two loadbalancers
  virtual_ipaddress {
    {{ keepalive__vip }}
  }
{% if keepalive__unicast_peer_group is defined %}
  unicast_src_ip {{ hostvars[inventory_hostname]['ansible_'+keepalive__interface]['ipv4']['address'] }}
  unicast_peer {
  {% for host in groups[keepalive__unicast_peer_group] %}
    {% if host != inventory_hostname %}
       {{ hostvars[host]['ansible_'+keepalive__interface]['ipv4']['address'] }}
    {% endif %}
  {% endfor %}
  }
{% endif %}

{% if keepalive__nopreempt %}
  nopreempt
{% endif %}

{% if keepalive__services is defined and keepalive__services is iterable %}
  track_script {
{%   for service in keepalive__services %}
    check_{{ service.name }}
{%   endfor%}
  }
{% endif %}

{% if keepalive__notify_scripts is defined and keepalive__notify_scripts is mapping %}
{%  for state, options in keepalive__notify_scripts.items() %}
{%   if state == 'all' %}
{%    if options.shell is defined %}
  notify /usr/local/sbin/keepalive_notify_{{ state }}_{{ keepalive__instance }}{% if options.get('username') %} {{ options.username }} {{ options.groupname|default('') }}{% endif %}
{%    endif %}
{%   endif %}
{%  if state in ('master', 'backup', 'fault', 'stop') %}
{%   if options.shell is defined %}
  notif_{{ state }} /usr/local/sbin/vrrp_notify_{{ state }}_{{ keepalived__instance }}{% if options.get('username') %} {{ options.username }} {{ options.groupname|default('') }}{% endif %}

{%    endif %}
{%   endif %}
{%  endfor %}
{% endif %}

{% if keepalive__smtp_alert and keepalive__global_defs.notification_email is defined %}
  smtp_alert
{% endif %}
}
